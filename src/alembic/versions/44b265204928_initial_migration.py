"""Initial migration

Revision ID: 44b265204928
Revises:
Create Date: 2022-06-03 15:05:44.280588

"""
import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision = "44b265204928"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "citation",
        sa.Column("pmid", sa.Integer(), nullable=False),
        sa.Column("date_created", sa.Date(), nullable=True),
        sa.Column("date_completed", sa.Date(), nullable=True),
        sa.Column("date_revised", sa.Date(), nullable=True),
        sa.Column("number_of_references", sa.Integer(), nullable=True),
        sa.Column(
            "keyword_list_owner",
            sa.Enum("NLM", "NASA", "PIP", "KIE", "HSR", "HMD", "SIS", "NOTNLM", name="owner"),
            nullable=True,
        ),
        sa.Column(
            "citation_owner",
            sa.Enum("NLM", "NASA", "PIP", "KIE", "HSR", "HMD", "SIS", "NOTNLM", name="owner"),
            nullable=True,
        ),
        sa.Column(
            "citation_status",
            sa.Enum(
                "In-Data-Review",
                "In-Process",
                "MEDLINE",
                "OLDMEDLINE",
                "PubMed-not-MEDLINE",
                "Publisher",
                "Completed",
                name="status",
            ),
            nullable=True,
        ),
        sa.Column("article_title", sa.String(length=4000), nullable=False),
        sa.Column("start_page", sa.String(length=10), nullable=True),
        sa.Column("end_page", sa.String(length=10), nullable=True),
        sa.Column("medline_pgn", sa.String(length=400), nullable=True),
        sa.Column("article_affiliation", sa.String(length=2000), nullable=True),
        sa.Column("article_author_list_comp_yn", sa.Enum("Y", "N", "y", "n", name="yesno"), nullable=True),
        sa.Column("data_bank_list_complete_yn", sa.Enum("Y", "N", "y", "n", name="yesno"), nullable=True),
        sa.Column("grant_list_complete_yn", sa.Enum("Y", "N", "y", "n", name="yesno"), nullable=True),
        sa.Column("vernacular_title", sa.String(length=4000), nullable=True),
        sa.PrimaryKeyConstraint("pmid"),
    )
    op.create_index(op.f("ix_citation_date_completed"), "citation", ["date_completed"], unique=False)
    op.create_index(op.f("ix_citation_date_revised"), "citation", ["date_revised"], unique=False)
    op.create_table(
        "xml_file",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("xml_file_name", sa.String(length=50), nullable=False),
        sa.Column("doc_type_name", sa.String(length=100), nullable=True),
        sa.Column("dtd_public_id", sa.String(length=200), nullable=True),
        sa.Column("dtd_system_id", sa.String(length=200), nullable=True),
        sa.Column("time_processed", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("xml_file_name"),
    )
    op.create_table(
        "abstract",
        sa.Column("pmid", sa.Integer(), nullable=False),
        sa.Column("abstract_text", sa.Text(), nullable=True),
        sa.Column("copyright_information", sa.String(length=4000), nullable=True),
        sa.ForeignKeyConstraint(
            ["pmid"], ["citation.pmid"], onupdate="CASCADE", ondelete="CASCADE", initially="DEFERRED", deferrable=True
        ),
        sa.PrimaryKeyConstraint("pmid"),
    )
    op.create_table(
        "accession",
        sa.Column("pmid", sa.Integer(), nullable=False),
        sa.Column("data_bank_name", sa.String(length=300), nullable=False),
        sa.Column("accession_number", sa.String(length=200), nullable=False),
        sa.ForeignKeyConstraint(
            ["pmid"], ["citation.pmid"], onupdate="CASCADE", ondelete="CASCADE", initially="DEFERRED", deferrable=True
        ),
        sa.PrimaryKeyConstraint("pmid", "data_bank_name", "accession_number"),
    )
    op.create_index(op.f("ix_accession_accession_number"), "accession", ["accession_number"], unique=False)
    op.create_index(op.f("ix_accession_data_bank_name"), "accession", ["data_bank_name"], unique=False)
    op.create_table(
        "author",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("pmid", sa.Integer(), nullable=False),
        sa.Column("last_name", sa.String(length=300), nullable=True),
        sa.Column("fore_name", sa.String(length=100), nullable=True),
        sa.Column("initials", sa.String(length=10), nullable=True),
        sa.Column("suffix", sa.String(length=20), nullable=True),
        sa.Column("collective_name", sa.String(length=2700), nullable=True),
        sa.ForeignKeyConstraint(
            ["pmid"], ["citation.pmid"], onupdate="CASCADE", ondelete="CASCADE", initially="DEFERRED", deferrable=True
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_author_collective_name"), "author", ["collective_name"], unique=False)
    op.create_index(op.f("ix_author_last_name"), "author", ["last_name"], unique=False)
    op.create_index(op.f("ix_author_pmid"), "author", ["pmid"], unique=False)
    op.create_table(
        "chemical",
        sa.Column("pmid", sa.Integer(), nullable=False),
        sa.Column("registry_number", sa.String(length=20), nullable=False),
        sa.Column("name_of_substance", sa.String(length=3000), nullable=False),
        sa.Column("substance_ui", sa.String(length=10), nullable=True),
        sa.ForeignKeyConstraint(
            ["pmid"], ["citation.pmid"], onupdate="CASCADE", ondelete="CASCADE", initially="DEFERRED", deferrable=True
        ),
        sa.PrimaryKeyConstraint("pmid", "registry_number", "name_of_substance"),
    )
    op.create_index(op.f("ix_chemical_name_of_substance"), "chemical", ["name_of_substance"], unique=False)
    op.create_index(op.f("ix_chemical_substance_ui"), "chemical", ["substance_ui"], unique=False)
    op.create_table(
        "citation_subset",
        sa.Column("pmid", sa.Integer(), nullable=False),
        sa.Column("citation_subset", sa.String(length=500), nullable=False),
        sa.ForeignKeyConstraint(
            ["pmid"], ["citation.pmid"], onupdate="CASCADE", ondelete="CASCADE", initially="DEFERRED", deferrable=True
        ),
        sa.PrimaryKeyConstraint("pmid", "citation_subset"),
    )
    op.create_table(
        "comment",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("pmid", sa.Integer(), nullable=False),
        sa.Column("ref_type", sa.String(length=21), nullable=False),
        sa.Column("ref_source", sa.String(length=255), nullable=False),
        sa.Column("pmid_version", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["pmid"], ["citation.pmid"], onupdate="CASCADE", ondelete="CASCADE", initially="DEFERRED", deferrable=True
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_comment_pmid"), "comment", ["pmid"], unique=False)
    op.create_index(op.f("ix_comment_pmid_version"), "comment", ["pmid_version"], unique=False)
    op.create_table(
        "data_bank",
        sa.Column("pmid", sa.Integer(), nullable=False),
        sa.Column("data_bank_name", sa.String(length=300), nullable=False),
        sa.ForeignKeyConstraint(
            ["pmid"], ["citation.pmid"], onupdate="CASCADE", ondelete="CASCADE", initially="DEFERRED", deferrable=True
        ),
        sa.PrimaryKeyConstraint("pmid", "data_bank_name"),
    )
    op.create_table(
        "gene_symbol",
        sa.Column("pmid", sa.Integer(), nullable=False),
        sa.Column("gene_symbol", sa.String(length=40), nullable=False),
        sa.ForeignKeyConstraint(
            ["pmid"], ["citation.pmid"], onupdate="CASCADE", ondelete="CASCADE", initially="DEFERRED", deferrable=True
        ),
        sa.PrimaryKeyConstraint("pmid", "gene_symbol"),
    )
    op.create_index(op.f("ix_gene_symbol_gene_symbol"), "gene_symbol", ["gene_symbol"], unique=False)
    op.create_table(
        "grant",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("pmid", sa.Integer(), nullable=False),
        sa.Column("grantid", sa.String(length=200), nullable=True),
        sa.Column("acronym", sa.String(length=20), nullable=True),
        sa.Column("agency", sa.String(length=200), nullable=True),
        sa.Column("country", sa.String(length=200), nullable=True),
        sa.ForeignKeyConstraint(
            ["pmid"], ["citation.pmid"], onupdate="CASCADE", ondelete="CASCADE", initially="DEFERRED", deferrable=True
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_grant_grantid"), "grant", ["grantid"], unique=False)
    op.create_index(op.f("ix_grant_pmid"), "grant", ["pmid"], unique=False)
    op.create_table(
        "investigator",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("pmid", sa.Integer(), nullable=False),
        sa.Column("last_name", sa.String(length=300), nullable=True),
        sa.Column("fore_name", sa.String(length=100), nullable=True),
        sa.Column("initials", sa.String(length=10), nullable=True),
        sa.Column("suffix", sa.String(length=20), nullable=True),
        sa.Column("investigator_affiliation", sa.String(length=200), nullable=True),
        sa.ForeignKeyConstraint(
            ["pmid"], ["citation.pmid"], onupdate="CASCADE", ondelete="CASCADE", initially="DEFERRED", deferrable=True
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_investigator_last_name"), "investigator", ["last_name"], unique=False)
    op.create_table(
        "journal",
        sa.Column("pmid", sa.Integer(), nullable=False),
        sa.Column("issn", sa.String(length=30), nullable=True),
        sa.Column("issn_type", sa.String(length=30), nullable=True),
        sa.Column("volume", sa.String(length=500), nullable=True),
        sa.Column("issue", sa.String(length=500), nullable=True),
        sa.Column("pub_date_year", sa.Integer(), nullable=True),
        sa.Column("pub_date_month", sa.String(length=20), nullable=True),
        sa.Column("pub_date_day", sa.String(length=2), nullable=True),
        sa.Column("medline_date", sa.String(length=40), nullable=True),
        sa.Column("title", sa.String(length=2000), nullable=True),
        sa.Column("iso_abbreviation", sa.String(length=200), nullable=True),
        sa.ForeignKeyConstraint(
            ["pmid"], ["citation.pmid"], onupdate="CASCADE", ondelete="CASCADE", initially="DEFERRED", deferrable=True
        ),
        sa.PrimaryKeyConstraint("pmid"),
    )
    op.create_index(op.f("ix_journal_issn"), "journal", ["issn"], unique=False)
    op.create_index(op.f("ix_journal_pub_date_year"), "journal", ["pub_date_year"], unique=False)
    op.create_table(
        "journal_info",
        sa.Column("pmid", sa.Integer(), nullable=False),
        sa.Column("nlm_unique_id", sa.String(length=20), nullable=True),
        sa.Column("medline_ta", sa.String(length=200), nullable=False),
        sa.Column("country", sa.String(length=50), nullable=True),
        sa.ForeignKeyConstraint(
            ["pmid"], ["citation.pmid"], onupdate="CASCADE", ondelete="CASCADE", initially="DEFERRED", deferrable=True
        ),
        sa.PrimaryKeyConstraint("pmid"),
    )
    op.create_index(op.f("ix_journal_info_medline_ta"), "journal_info", ["medline_ta"], unique=False)
    op.create_index(op.f("ix_journal_info_nlm_unique_id"), "journal_info", ["nlm_unique_id"], unique=False)
    op.create_table(
        "keyword",
        sa.Column("pmid", sa.Integer(), nullable=False),
        sa.Column("keyword", sa.String(length=1000), nullable=False),
        sa.Column("keyword_major_yn", sa.Enum("Y", "N", "y", "n", name="yesno"), nullable=True),
        sa.ForeignKeyConstraint(
            ["pmid"], ["citation.pmid"], onupdate="CASCADE", ondelete="CASCADE", initially="DEFERRED", deferrable=True
        ),
        sa.PrimaryKeyConstraint("pmid", "keyword"),
    )
    op.create_index(op.f("ix_keyword_keyword"), "keyword", ["keyword"], unique=False)
    op.create_table(
        "language",
        sa.Column("pmid", sa.Integer(), nullable=False),
        sa.Column("language", sa.String(length=50), nullable=False),
        sa.ForeignKeyConstraint(
            ["pmid"], ["citation.pmid"], onupdate="CASCADE", ondelete="CASCADE", initially="DEFERRED", deferrable=True
        ),
        sa.PrimaryKeyConstraint("pmid", "language"),
    )
    op.create_table(
        "mesh_heading",
        sa.Column("pmid", sa.Integer(), nullable=False),
        sa.Column("descriptor_name", sa.String(length=500), nullable=False),
        sa.Column("descriptor_name_major_yn", sa.Enum("Y", "N", "y", "n", name="yesno"), nullable=True),
        sa.Column("descriptor_ui", sa.String(length=10), nullable=True),
        sa.ForeignKeyConstraint(
            ["pmid"], ["citation.pmid"], onupdate="CASCADE", ondelete="CASCADE", initially="DEFERRED", deferrable=True
        ),
        sa.PrimaryKeyConstraint("pmid", "descriptor_name"),
    )
    op.create_index(op.f("ix_mesh_heading_descriptor_ui"), "mesh_heading", ["descriptor_ui"], unique=False)
    op.create_table(
        "note",
        sa.Column("pmid", sa.Integer(), nullable=False),
        sa.Column("general_note", sa.String(length=2000), nullable=False),
        sa.Column(
            "general_note_owner",
            sa.Enum("NLM", "NASA", "PIP", "KIE", "HSR", "HMD", "SIS", "NOTNLM", name="owner"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["pmid"], ["citation.pmid"], onupdate="CASCADE", ondelete="CASCADE", initially="DEFERRED", deferrable=True
        ),
        sa.PrimaryKeyConstraint("pmid", "general_note"),
    )
    op.create_table(
        "other_abstract",
        sa.Column("pmid", sa.Integer(), nullable=False),
        sa.Column("other_abstract", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["pmid"], ["citation.pmid"], onupdate="CASCADE", ondelete="CASCADE", initially="DEFERRED", deferrable=True
        ),
        sa.PrimaryKeyConstraint("pmid"),
    )
    op.create_table(
        "other_id",
        sa.Column("pmid", sa.Integer(), nullable=False),
        sa.Column("other_id", sa.String(length=200), nullable=False),
        sa.Column("other_id_source", sa.String(length=10), nullable=False),
        sa.ForeignKeyConstraint(
            ["pmid"], ["citation.pmid"], onupdate="CASCADE", ondelete="CASCADE", initially="DEFERRED", deferrable=True
        ),
        sa.PrimaryKeyConstraint("pmid", "other_id"),
    )
    op.create_index(op.f("ix_other_id_other_id"), "other_id", ["other_id"], unique=False)
    op.create_table(
        "personal_name",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("pmid", sa.Integer(), nullable=False),
        sa.Column("last_name", sa.String(length=300), nullable=False),
        sa.Column("fore_name", sa.String(length=100), nullable=True),
        sa.Column("initials", sa.String(length=10), nullable=True),
        sa.Column("suffix", sa.String(length=20), nullable=True),
        sa.ForeignKeyConstraint(
            ["pmid"], ["citation.pmid"], onupdate="CASCADE", ondelete="CASCADE", initially="DEFERRED", deferrable=True
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_personal_name_last_name"), "personal_name", ["last_name"], unique=False)
    op.create_table(
        "pmid_file_mapping",
        sa.Column("pmid", sa.Integer(), nullable=False),
        sa.Column("id_file", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["id_file"], ["xml_file.id"], onupdate="CASCADE", ondelete="CASCADE", initially="DEFERRED", deferrable=True
        ),
        sa.ForeignKeyConstraint(
            ["pmid"], ["citation.pmid"], onupdate="CASCADE", ondelete="CASCADE", initially="DEFERRED", deferrable=True
        ),
        sa.PrimaryKeyConstraint("pmid"),
    )
    op.create_table(
        "publication_type",
        sa.Column("pmid", sa.Integer(), nullable=False),
        sa.Column("publication_type", sa.String(length=200), nullable=False),
        sa.ForeignKeyConstraint(
            ["pmid"], ["citation.pmid"], onupdate="CASCADE", ondelete="CASCADE", initially="DEFERRED", deferrable=True
        ),
        sa.PrimaryKeyConstraint("pmid", "publication_type"),
    )
    op.create_table(
        "qualifier",
        sa.Column("pmid", sa.Integer(), nullable=False),
        sa.Column("descriptor_name", sa.String(length=500), nullable=False),
        sa.Column("qualifier_name", sa.String(length=500), nullable=False),
        sa.Column("qualifier_name_major_yn", sa.Enum("Y", "N", "y", "n", name="yesno"), nullable=True),
        sa.Column("qualifier_ui", sa.String(length=10), nullable=True),
        sa.ForeignKeyConstraint(
            ["pmid"], ["citation.pmid"], onupdate="CASCADE", ondelete="CASCADE", initially="DEFERRED", deferrable=True
        ),
        sa.PrimaryKeyConstraint("pmid", "descriptor_name", "qualifier_name"),
    )
    op.create_index(op.f("ix_qualifier_descriptor_name"), "qualifier", ["descriptor_name"], unique=False)
    op.create_index(op.f("ix_qualifier_qualifier_name"), "qualifier", ["qualifier_name"], unique=False)
    op.create_index(op.f("ix_qualifier_qualifier_ui"), "qualifier", ["qualifier_ui"], unique=False)
    op.create_table(
        "space_flight",
        sa.Column("pmid", sa.Integer(), nullable=False),
        sa.Column("space_flight_mission", sa.String(length=500), nullable=False),
        sa.ForeignKeyConstraint(
            ["pmid"], ["citation.pmid"], onupdate="CASCADE", ondelete="CASCADE", initially="DEFERRED", deferrable=True
        ),
        sa.PrimaryKeyConstraint("pmid", "space_flight_mission"),
    )
    op.create_table(
        "suppl_mesh_name",
        sa.Column("pmid", sa.Integer(), nullable=False),
        sa.Column("suppl_mesh_name", sa.String(length=80), nullable=False),
        sa.Column("suppl_mesh_name_ui", sa.String(length=10), nullable=False),
        sa.Column("suppl_mesh_name_type", sa.String(length=8), nullable=False),
        sa.ForeignKeyConstraint(
            ["pmid"], ["citation.pmid"], onupdate="CASCADE", ondelete="CASCADE", initially="DEFERRED", deferrable=True
        ),
        sa.PrimaryKeyConstraint("pmid", "suppl_mesh_name", "suppl_mesh_name_ui"),
    )
    op.create_index(op.f("ix_suppl_mesh_name_suppl_mesh_name"), "suppl_mesh_name", ["suppl_mesh_name"], unique=False)
    op.create_index(
        op.f("ix_suppl_mesh_name_suppl_mesh_name_ui"), "suppl_mesh_name", ["suppl_mesh_name_ui"], unique=False
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_suppl_mesh_name_suppl_mesh_name_ui"), table_name="suppl_mesh_name")
    op.drop_index(op.f("ix_suppl_mesh_name_suppl_mesh_name"), table_name="suppl_mesh_name")
    op.drop_table("suppl_mesh_name")
    op.drop_table("space_flight")
    op.drop_index(op.f("ix_qualifier_qualifier_ui"), table_name="qualifier")
    op.drop_index(op.f("ix_qualifier_qualifier_name"), table_name="qualifier")
    op.drop_index(op.f("ix_qualifier_descriptor_name"), table_name="qualifier")
    op.drop_table("qualifier")
    op.drop_table("publication_type")
    op.drop_table("pmid_file_mapping")
    op.drop_index(op.f("ix_personal_name_last_name"), table_name="personal_name")
    op.drop_table("personal_name")
    op.drop_index(op.f("ix_other_id_other_id"), table_name="other_id")
    op.drop_table("other_id")
    op.drop_table("other_abstract")
    op.drop_table("note")
    op.drop_index(op.f("ix_mesh_heading_descriptor_ui"), table_name="mesh_heading")
    op.drop_table("mesh_heading")
    op.drop_table("language")
    op.drop_index(op.f("ix_keyword_keyword"), table_name="keyword")
    op.drop_table("keyword")
    op.drop_index(op.f("ix_journal_info_nlm_unique_id"), table_name="journal_info")
    op.drop_index(op.f("ix_journal_info_medline_ta"), table_name="journal_info")
    op.drop_table("journal_info")
    op.drop_index(op.f("ix_journal_pub_date_year"), table_name="journal")
    op.drop_index(op.f("ix_journal_issn"), table_name="journal")
    op.drop_table("journal")
    op.drop_index(op.f("ix_investigator_last_name"), table_name="investigator")
    op.drop_table("investigator")
    op.drop_index(op.f("ix_grant_pmid"), table_name="grant")
    op.drop_index(op.f("ix_grant_grantid"), table_name="grant")
    op.drop_table("grant")
    op.drop_index(op.f("ix_gene_symbol_gene_symbol"), table_name="gene_symbol")
    op.drop_table("gene_symbol")
    op.drop_table("data_bank")
    op.drop_index(op.f("ix_comment_pmid_version"), table_name="comment")
    op.drop_index(op.f("ix_comment_pmid"), table_name="comment")
    op.drop_table("comment")
    op.drop_table("citation_subset")
    op.drop_index(op.f("ix_chemical_substance_ui"), table_name="chemical")
    op.drop_index(op.f("ix_chemical_name_of_substance"), table_name="chemical")
    op.drop_table("chemical")
    op.drop_index(op.f("ix_author_pmid"), table_name="author")
    op.drop_index(op.f("ix_author_last_name"), table_name="author")
    op.drop_index(op.f("ix_author_collective_name"), table_name="author")
    op.drop_table("author")
    op.drop_index(op.f("ix_accession_data_bank_name"), table_name="accession")
    op.drop_index(op.f("ix_accession_accession_number"), table_name="accession")
    op.drop_table("accession")
    op.drop_table("abstract")
    op.drop_table("xml_file")
    op.drop_index(op.f("ix_citation_date_revised"), table_name="citation")
    op.drop_index(op.f("ix_citation_date_completed"), table_name="citation")
    op.drop_table("citation")
    # ### end Alembic commands ###
